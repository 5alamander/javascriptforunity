using UnityEngine;
using System.Collections;
using System.IO;
using System.Text;

public class JSComponentGenerator
{
    public struct Info
    {
        public string signature;
        public int group;

        public Info(string s, int g)
        {
            signature = s;
            group = g;
        }
        public string methodName
        {
            get
            {
                int i = signature.IndexOf('(');
                return signature.Substring(0, i);
            }
        }
        public string argList
        {
            get
            {
                if (signature.IndexOf("()") == 0)
                    return string.Empty;

                int i = signature.IndexOf('(');
                var content = signature.Substring(i + 1, signature.Length - i - 2); // string in ()
                string[] ps = content.Split(',');
                cg.args a = new cg.args();
                foreach (var p in ps)
                {
                    a.Add(p.Substring(p.LastIndexOf(' ') + 1));
                }
                return a.Format(cg.args.ArgsFormat.OnlyList);
            }
        }
    }

    public static Info[] infos = new Info[]
    {
        // already in JSComponent
//      new Info("Awake()"),
//      new Info("Start()"),
//      new Info("OnDestroy()"),

        // Performance killer
        new Info("Update()", 0),

        new Info("FixedUpdate()", 0),

        new Info("LateUpdate()", 0),

        new Info("OnGUI()", 0),

        new Info("OnDisable()", 10),
        new Info("OnEnable()", 10),
        new Info("OnBecameInvisible()", 10),
        new Info("OnBecameVisible()", 10),

        new Info("OnTransformChildrenChanged()", 80),
        new Info("OnTransformParentChanged()", 80),

        new Info("OnApplicationFocus(bool focusStatus)", 20),
        new Info("OnApplicationPause(bool pauseStatus)", 20),
        new Info("OnApplicationQuit()", 20),
        new Info("OnAudioFilterRead(float[] data, int channels)", 20),
        new Info("OnLevelWasLoaded(int level)", 20),

        new Info("OnAnimatorIK(int layerIndex)", 30),
        new Info("OnAnimatorMove()", 30),
        new Info("OnJointBreak(float breakForce)", 30),

        new Info("OnParticleCollision(GameObject other)", 40),
        new Info("OnCollisionEnter(Collision collisionInfo)", 40),
        new Info("OnCollisionEnter2D(Collision2D coll)", 40),
        new Info("OnCollisionExit(Collision collisionInfo)", 40),
        new Info("OnCollisionExit2D(Collision2D coll)", 40),
        new Info("OnCollisionStay(Collision collisionInfo)", 40),
        new Info("OnCollisionStay2D(Collision2D coll)", 40),
        new Info("OnTriggerEnter(Collider other)", 40),
        new Info("OnTriggerEnter2D(Collider2D other)", 40),
        new Info("OnTriggerExit(Collider other)", 40),
        new Info("OnTriggerExit2D(Collider2D other)", 40),
        new Info("OnTriggerStay(Collider other)", 40),
        new Info("OnTriggerStay2D(Collider2D other)", 40),
        new Info("OnControllerColliderHit(ControllerColliderHit hit)", 40),

        new Info("OnConnectedToServer()", 50),
        new Info("OnDisconnectedFromServer(NetworkDisconnection info)", 50),
        new Info("OnFailedToConnect(NetworkConnectionError error)", 50),
        new Info("OnFailedToConnectToMasterServer(NetworkConnectionError info)", 50),
        new Info("OnMasterServerEvent(MasterServerEvent msEvent)", 50),
        new Info("OnNetworkInstantiate(NetworkMessageInfo info)", 50),
        new Info("OnPlayerConnected(NetworkPlayer player)", 50),
        new Info("OnPlayerDisconnected(NetworkPlayer player)", 50),
        new Info("OnSerializeNetworkView(BitStream stream, NetworkMessageInfo info)", 50),
        new Info("OnServerInitialized()", 50),

        new Info("OnMouseDown()", 60),
        new Info("OnMouseDrag()", 60),
        new Info("OnMouseEnter()", 60),
        new Info("OnMouseExit()", 60),
        new Info("OnMouseOver()", 60),
        new Info("OnMouseUp()", 60),
        new Info("OnMouseUpAsButton()", 60),

        new Info("OnPostRender()", 70),
        new Info("OnPreCull()", 70),
        new Info("OnPreRender()", 70),
        new Info("OnRenderImage(RenderTexture src, RenderTexture dest)", 70),
        new Info("OnRenderObject()", 70),
        new Info("OnWillRenderObject()", 70),


        // Editor only
        //
        // Reset
        // OnDrawGizmos
        // OnDrawGizmosSelected
        // OnValidate
    };

    public static JSComponent CreateJSComponentInstance(MonoBehaviour behav)
    {
        return null;
    }
    public static void GenJSComponents()
    {
        string fileFormat = @"// Automatically generated by JSComponentGenerator.
public class JSComponent_{0} : JSComponent
[[
// variables
{1}

// functions
{2}
]]";
        StringBuilder sb = new StringBuilder();
        string fileName = Application.dataPath + "/JSBinding/Source/JSComponent/" + "XXX.cs";
        var w = new StreamWriter(fileName, false/* append */, Encoding.UTF8);
        w.Write(sb.ToString());
        w.Close();
    }
}
